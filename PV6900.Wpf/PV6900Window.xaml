<Grid x:Class="PV6900.Wpf.PV6900Window"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PV6900.Wpf"
        xmlns:controls="clr-namespace:PV6900.Wpf.Controls"
        xmlns:it9000sharedservices="clr-namespace:IT9000.Wpf.Shared.Services;assembly=IT9000.Wpf.Shared"
        xmlns:pv6900sharedmodels="clr-namespace:PV6900.Wpf.Shared.Models;assembly=PV6900.Wpf.Shared"
        xmlns:pv6900sharedservices="clr-namespace:PV6900.Wpf.Shared.Services;assembly=PV6900.Wpf.Shared"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:pu="clr-namespace:Panuon.UI.Silver;assembly=Panuon.UI.Silver"  
        
        mc:Ignorable="d"
        MinHeight="600" MinWidth="800" MaxWidth="1200">
    <Grid.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="PV6900ResourceDictionary.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Grid.Resources>

    <ScrollViewer VerticalScrollBarVisibility="Auto">
        <Grid VerticalAlignment="Top">
            <Grid.Resources>
                <it9000sharedservices:BoolNegateConverter x:Key="boolNegateConverter" />
                <pv6900sharedservices:InnerLoopFlagBoolConverter x:Key="innerLoopFlagBoolConverter" />
                <pv6900sharedservices:InnerLoopCountTextConverter x:Key="innerLoopCountTextConverter" />
                <!--<ObjectDataProvider MethodName="GetNames" ObjectType="{x:Type sys:Enum}" 
                            x:Key="InnerLoopFlagEnums">
                    <ObjectDataProvider.MethodParameters>
                        <x:Type TypeName="pv6900sharedmodels:InnerLoopFlag" />
                    </ObjectDataProvider.MethodParameters>
                </ObjectDataProvider>-->
            </Grid.Resources>

            <Grid.RowDefinitions>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="10*"/>
                <RowDefinition Height="10*"/>
                <RowDefinition Height="1*" />
            </Grid.RowDefinitions>

            <Menu Grid.Row="0" HorizontalAlignment="Center" 
                  Height="40"
                  Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Grid},Path=ActualWidth}"
                DataContext="{Binding MonitorMenuVM}">
                <MenuItem Header="Start Monitor" FontSize="14" Width="128"
                          Foreground="BlueViolet"
                          Command="{Binding StartMonitorCommand}"
                          IsEnabled="{Binding InMonitor,Converter={StaticResource boolNegateConverter}}"/>
                <MenuItem Header="Stop Monitor" FontSize="14" Width="128"
                          Foreground="BlueViolet"
                          Command="{Binding StopMonitorCommand}"
                          IsEnabled="{Binding InMonitor}"
                          />
            </Menu>

            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition Width="4*"/>
                </Grid.ColumnDefinitions>

                <Grid Grid.Column="0" DataContext="{Binding TimeSpanGaugesVM}" VerticalAlignment="Center"
                      Background="#fefefe" Margin="12">
                    <Grid.Effect>
                        <DropShadowEffect ShadowDepth="-4" BlurRadius="8" Color="LightGray"/>
                    </Grid.Effect>
                    <StackPanel Margin="0 16">
                        <controls:Gauge Header="Setting Volta  :" Value="{Binding SettingVolta,StringFormat={}{0:N2}}"/>
                        <controls:Gauge Header="Volta          :" Value="{Binding Volta,StringFormat={}{0:N2}}"/>
                        <controls:Gauge Margin="0,12,0,0" Header="Setting Ampere :" 
                                                        Value="{Binding SettingAmpere,StringFormat={}{0:N2}}"/>
                        <controls:Gauge Header="Ampere         :" Value="{Binding Ampere,StringFormat={}{0:N2}}"/>
                    </StackPanel>
                </Grid>

                <StackPanel  DataContext="{Binding ProgramDashboardVM}" Margin="32 4" Grid.Column="1"
                             
                        >
                    <DataGrid ItemsSource="{Binding ManagedProgramSteps}"
                              Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=StackPanel},Path=ActualWidth}"
                            CanUserAddRows="False"
                            HorizontalAlignment="Left"
                            CanUserDeleteRows="False"
                            AutoGenerateColumns="False"
                            CanUserSortColumns="False"
                            IsReadOnly="{Binding InRunning}"
                            Name="DataGrid_ProgramEditor">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Volta" Binding="{Binding Volta}"  Width="1*"/>
                            <DataGridTextColumn Header="Ampere" Binding="{Binding Ampere}"  Width="1*"/>
                            <DataGridTextColumn Header="Duration" Binding="{Binding Duration}" Width="1*"/>
                            <!--ItemsSource="{Binding Source={StaticResource InnerLoopFlagEnums}}"-->
                            <DataGridTemplateColumn Header="Inner loop type" Width="1*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <ComboBox Height="26" pu:ComboBoxHelper.BindToEnum="{x:Static pv6900sharedmodels:InnerLoopFlag.None}"
                                               SelectedValue="{Binding InnerLoopFlag,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                                  />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            
                            <!--<DataGridComboBoxColumn Header="Inner loop type"   
                                                TextBinding="{Binding InnerLoopFlag}"  Width="1*"
                                                    pu:ComboBoxHelper.BindToEnum="{x:Static pv6900sharedmodels:InnerLoopFlag.None}"
                                                    />-->
                            <DataGridTextColumn Header="In.Loop Count" Binding="{Binding InnerLoopCount,Converter={StaticResource innerLoopCountTextConverter}}"
                                               Width="1*"/>

                        </DataGrid.Columns>
                    </DataGrid>

                    <StackPanel Orientation="Horizontal" Margin="0,32,0,0">
                        <Button Style="{StaticResource puProgramEditorButton}" Background="Blue"
                            Content="Add" Command="{Binding AddCommand}" 
                                IsEnabled="{Binding InRunning,Converter={StaticResource boolNegateConverter}}"/>
                        <Button Style="{StaticResource puProgramEditorButton}" Background="Brown"
                            Content="Delete"
                            Command="{Binding DeleteCommand}" 
                            CommandParameter="{Binding ElementName=DataGrid_ProgramEditor}"
                                IsEnabled="{Binding InRunning,Converter={StaticResource boolNegateConverter}}"/>

                        <StackPanel VerticalAlignment="Center" Orientation="Horizontal">
                            <Label Content="Outer loop count:" />
                            <TextBox pu:TextBoxHelper.FocusedShadowColor="AliceBlue" MinWidth="32"
                                Text="{Binding OuterLoopCount,UpdateSourceTrigger=PropertyChanged}" />
                        </StackPanel>

                        <Button Margin="24,0,0,0" Style="{StaticResource puProgramEditorButton}"
                                x:Name="Button_StartRunProgram"
                            Content="Run" Background="Green" 
                            Command="{Binding StartCommand}"
                            CommandParameter="{Binding ElementName=DataGrid_ProgramEditor}"
                            IsEnabled="{Binding InRunning,Converter={StaticResource boolNegateConverter}}"
                            />
                        <Button Content="Stop" Style="{StaticResource puProgramEditorButton}"
                                x:Name="Button_StopRunProgram"
                            Margin="8,0"
                            Background="Red" 
                            Command="{Binding StopCommand}"
                            IsEnabled="{Binding InRunning}"
                            />

                        <Button Margin="24,0,0,0"
                                
                            Content="Import"  Style="{StaticResource puProgramEditorButton}" Background="Gray"
                            Command="{Binding ImportProgramCommand}"
                            IsEnabled="{Binding InRunning,Converter={StaticResource boolNegateConverter}}"
                            />
                        <Button Margin="8,0,0,0"
                                
                            Content="Export"  Style="{StaticResource puProgramEditorButton}" Background="Gray"
                            Command="{Binding ExportProgramCommand}"
                            IsEnabled="{Binding InRunning,Converter={StaticResource boolNegateConverter}}"
                            />
                    </StackPanel>
                    <Border BorderBrush="Black" BorderThickness="0.5"  CornerRadius="16"
                            Margin="24 32 0 0"
                            >
                        <StackPanel Margin="48 12" DataContext="{Binding ProgramRunningStatusPanelVM}"
                                    >
                            <controls:StatusBar  Margin="0 8" MinHeight="32"
                                Header="Current Step Running(s):" 
                                CurrentValue="{Binding  CurrentStepRunningSeconds,StringFormat={}{0:N1}}"
                                TotalValue="{Binding  CurrentStepDuration,StringFormat={}{0:N1}}"/>

                            <controls:StatusBar  Margin="0 8" MinHeight="32" 
                                Header="Inner Loop Current:" 
                                CurrentValue="{Binding  InnerLoopCurrent}"
                                TotalValue="{Binding  InnerLoopCount}"/>

                            <controls:StatusBar Margin="0 8" MinHeight="32" 
                                Header="Outer Loop Current:" 
                                CurrentValue="{Binding  OuterLoopCurrent}"
                                TotalValue="{Binding  OuterLoopCount}"/>

                            <controls:StatusBar Margin="0 8" MinHeight="32" 
                                Header="Total running time(s):" 
                                CurrentValue="{Binding RunningTimeSpan,StringFormat=dd\\-hh\\:mm\\:ss}"
                                TotalValue="{Binding ProgramDuration,StringFormat=dd\\-hh\\:mm\\:ss}"/>


                        </StackPanel>
                    </Border>
                </StackPanel>
            </Grid>


            <controls:TimeSpanLiveChart Grid.Row="2" HorizontalAlignment="Center"
                                    Margin="0 32 0 0"
                            TimeSpanVoltaChartDataContext="{Binding TimeSpanVoltaChartVM}"
                            TimeSpanAmpereChartDataContext="{Binding TimeSpanAmpereChartVM}">

            </controls:TimeSpanLiveChart>

        </Grid>

    </ScrollViewer>
</Grid>
